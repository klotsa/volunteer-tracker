class Volunteer

attr_accessor(:id, :name, :project_id)

def initialize(attributes)
  @id = attributes(:id)
  @name = attributes(:name)
  @project_id = attributes(:project_id)
end

  def self.all
    returned_volunteers = DB.exec("SELECT * FROM volunteers")
    volunteers = []
    returned_volunteers.each() do |volunteer|
      name = volunteer.fetch("name")
      id = volunteer.fetch("id").to_i()
      project_id = volunteer.fetch("project_id").to_i()
      volunteers.push(Project.new({:id=>id, :name=>name, :project_id => project_id}))
    end
    volunteers
  end

  def ==(new_volunteer)
    (self.id() == new_volunteer.id()) && (self.name() == new_volunteer.name()) && (self.project_id() == new_volunteer.project_id())
  end

  def save
    result = DB.exec("INSERT INTO volunteers (name, project_id) VALUES ('#{@name}' '#{@project_id}') RETURNING id;")
    @id = result.first().fetch("id").to_i()
  end

  def self.find(id)
    found_volunteer = nil
    Volunteer.all().each() do |volunteer|
      if volunteer.id() == id
        found_volunteer = volunteer
      end
    end
    return found_volunteer
  end

  def delete
    DB.exec("DELETE FROM volunteers WHERE id = #{self.id()};")
  end

  def project_name
    project_name = ""
    projects = DB.exec("SELECT * FROM projects WHERE id = #{self.project_id()};")
    projects.each() do |project|
      project_name = project.fetch("name")
    end
    project_name
  end

end
